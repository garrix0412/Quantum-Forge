[
  {
    "name": "Hamiltonian.TFIM",
    "kind": "hamiltonian",
    "tags": ["tfim", "ising", "spin", "transverse_field"],
    "needs": [],
    "provides": ["hamiltonian"],
    "params_schema": {
      "n": {"type": "int", "description": "Number of qubits"},
      "hx": {"type": "float", "description": "Transverse field strength"},
      "j": {"type": "float", "description": "Coupling strength"},
      "boundary": {"type": "str", "description": "Boundary condition", "enum": ["periodic", "open"]}
    },
    "yields": {
      "H": "SparsePauliOp hamiltonian"
    },
    "codegen_hint": {
      "helper": "build_tfim_h",
      "import": "from qiskit.quantum_info import SparsePauliOp"
    }
  },
  {
    "name": "Circuit.TFIM_HEA",
    "kind": "ansatz", 
    "tags": ["tfim", "hea", "hardware_efficient", "ansatz"],
    "needs": [],
    "provides": ["ansatz"],
    "params_schema": {
      "n": {"type": "int", "description": "Number of qubits"},
      "reps": {"type": "int", "description": "Circuit depth (number of layers)"}
    },
    "yields": {
      "ansatz": "QuantumCircuit ansatz"
    },
    "codegen_hint": {
      "helper": "tfim_hea",
      "import": "from qiskit import QuantumCircuit"
    }
  },
  {
    "name": "Algorithm.VQE",
    "kind": "algorithm",
    "tags": ["vqe", "variational", "ground_state"],
    "needs": ["hamiltonian", "ansatz", "optimizer", "estimator"],
    "provides": ["energy", "result"],
    "params_schema": {
      "optimizer": {"type": "str", "description": "Optimizer name"},
      "maxiter": {"type": "int", "description": "Maximum iterations"}
    },
    "yields": {
      "result": "VQE result object",
      "energy": "float ground state energy"
    },
    "codegen_hint": {
      "helper": "run_vqe",
      "import": "from qiskit_algorithms import VQE"
    }
  },
  {
    "name": "Optimizer.COBYLA",
    "kind": "optimizer",
    "tags": ["cobyla", "classical", "gradient_free"],
    "needs": [],
    "provides": ["optimizer"],
    "params_schema": {
      "maxiter": {"type": "int", "description": "Maximum iterations"}
    },
    "yields": {
      "optimizer": "COBYLA optimizer instance"
    },
    "codegen_hint": {
      "helper": "create_cobyla_optimizer",
      "import": "from qiskit_algorithms.optimizers import COBYLA"
    }
  },
  {
    "name": "Optimizer.L_BFGS_B",
    "kind": "optimizer",
    "tags": ["l_bfgs_b", "classical", "gradient_based"],
    "needs": [],
    "provides": ["optimizer"],
    "params_schema": {
      "maxiter": {"type": "int", "description": "Maximum iterations"}
    },
    "yields": {
      "optimizer": "L_BFGS_B optimizer instance"
    },
    "codegen_hint": {
      "helper": "create_l_bfgs_b_optimizer",
      "import": "from qiskit_algorithms.optimizers import L_BFGS_B"
    }
  },
  {
    "name": "Backend.Estimator",
    "kind": "backend",
    "tags": ["estimator", "primitive", "qiskit"],
    "needs": [],
    "provides": ["estimator"],
    "params_schema": {
      "shots": {"type": "int", "description": "Number of shots", "nullable": true}
    },
    "yields": {
      "estimator": "Estimator primitive"
    },
    "codegen_hint": {
      "helper": "create_estimator",
      "import": "from qiskit.primitives import Estimator"
    }
  }
]